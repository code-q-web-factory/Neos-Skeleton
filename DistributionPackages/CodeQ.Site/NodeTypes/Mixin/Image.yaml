##
# Mixins allow to you define multiple properties, default values or
# configurations in a reusable manner.
#
# While you could just define two node presets for the two properties,
# and reuse property definitions that way, this example should how you
# can orchestrate a set of properties. In many many cases you will have
# a Fusion component, which expects exactly one set of these properties.
#
# You could for example have a HeaderImage mixin, consisting of a headline
# and a image asset, and then a Fusion component HeaderImage which renders
# these properties as a header. Each document NodeType which supports a header
# get's the mixin and renders the matching Fusion component.
##
'CodeQ.Site:Mixin.Image':
  abstract: true
  ui:
    inspector:
      groups:
        image:
          label: 'Image'
          position: 5
          icon: 'icon-image'
  properties:
    image:
      ui:
        inspector:
          group: 'image'
      options:
        preset: 'image.asset'
    alternativeText:
      ui:
        inspector:
          group: 'image'
      options:
        preset: 'image.alternativeText'
