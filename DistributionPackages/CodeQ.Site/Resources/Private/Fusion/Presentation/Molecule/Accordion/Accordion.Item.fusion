prototype(CodeQ.Site:Presentation.Molecule.Accordion.Item) < prototype(Neos.Fusion:Component) {
    @styleguide {
        props {
            id = 'accordion-item-1'
            title = 'I am a title with a lot of content'
            content = Sitegeist.Monocle:Preview.Prototype {
                prototypeName = 'CodeQ.Site:Presentation.Atom.RichText'
            }
        }
        useCases {
            item2 {
                props {
                    id = 'accordion-item-2'
                    title = 'I feel empty inside'
                    content = ' '
                }
            }
        }
        container = CodeQ.Site:Presentation.Molecule.Accordion {
            content = ${value}
        }
    }

    @propTypes {
        @strict = true
        id = ${PropTypes.string.isRequired}
        title = ${PropTypes.string.isRequired}
        titleTagName = ${PropTypes.oneOf(['h3', 'h4', 'h5', 'h6'])}
        content = ${PropTypes.string.isRequired}
        alwaysOpen = ${PropTypes.boolean}
    }

    id = null
    title = null
    titleTagName = 'h3'
    content = null
    alwaysOpen = false

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}
        alpineOpenCondition = ${props.alwaysOpen ? 'true' : 'activeItemId === "' + props.id + '"'}

        renderer = afx`
            <dl id={props.id}
                class="item space-y-6 w-full border-b-4 border-transparent xl:hover:border-b-4 xl:hover:border-b-primary xl:hover:rounded-b-sm -mb-1 rounded high-contrast:border-none"
                x-bind:class={props.alpineOpenCondition + ' ? "border-b-4 border-b-primary rounded-b-sm -mb-1" : ""'}>
                <div class={String.trim('rounded high-contrast:border-2 high-contrast:border-black')}>
                    <dt>
                        <button x-on:click={'activeItemId = (activeItemId === "' + props.id + '" ? null : "' + props.id + '")'}
                                type="button"
                                class="w-full flex justify-between items-center group py-2 md:py-4"
                                aria-controls={props.id + '-content'}
                                x-bind:aria-expanded={'activeItemId === "' + props.id + '"'}
                        >
                            <div class="flex flex-col md:flex-row items-start md:items-center">
                                <Neos.Fusion:Tag tagName={props.titleTagName} attributes.class={props.titleTagName + ' m-0 pr-4 text-left text-black high-contrast:text-black'}>
                                    {props.title}
                                </Neos.Fusion:Tag>
                            </div>
                            <div class="md:mt-0" aria-hidden="true">
                                <svg
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        class="w-4 md:w-6 h-4 md:h-6 text-black high-contrast:text-black xl:group-hover:text-primary transition-all duration-300 w-4 h-4"
                                        x-bind:class={props.alwaysOpen ? null : ('activeItemId === "' + props.id + '" ? "" : "xl:group-hover:rotate-90"')}>
                                    <path d="M0,9H24v6H0Z" fill="currentColor"/>
                                    <path d="M9,24V0h6V24Z" fill="currentColor" x-show={'!(' + props.alpineOpenCondition + ')'}/>
                                </svg>
                            </div>
                        </button>
                    </dt>
                    <dd class="flex justify-start text-base text-black md:pt-0 md:pr-20"
                        x-ref={props.id + '-content'}
                        x-show={props.alpineOpenCondition}
                        "x-collapse.duration.1000ms"={!props.alwaysOpen}
                        id={props.id + '-content'}
                        x-bind:aria-hidden={'!(' + props.alpineOpenCondition + ')'}>
                        <div class="w-full pb-2 md:pb-8 md:mt-4">
                            {props.content}
                        </div>
                    </dd>
                </div>
            </dl>
        `
    }
}
