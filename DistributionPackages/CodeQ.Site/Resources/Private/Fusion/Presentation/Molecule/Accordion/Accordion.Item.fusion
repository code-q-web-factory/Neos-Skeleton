prototype(CodeQ.Site:Presentation.Molecule.Accordion.Item) < prototype(Neos.Fusion:Component) {
    @styleguide {
        props {
            id = 'accordion1-europa'
            title = 'Europa'
            content = '
                <div class="prose">
                    <h3>Hello in my accordion item</h3>
                    <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>
                </div>'
        }
        useCases {
            item2 {
                props {
                    id = 'accordion1-nordamerika'
                    title = 'Nordamerika'
                    content = 'I feel empty inside.'
                }
            }
        }
        container = CodeQ.Site:Presentation.Molecule.Accordion {
            content = ${value}
        }
    }

    @propTypes {
        @strict = true
        id = ${PropTypes.string.isRequired}
        title = ${PropTypes.string.isRequired}
        content = ${PropTypes.string.isRequired}
        alwaysOpen = ${PropTypes.boolean}
    }

    id = null
    title = null
    content = null
    alwaysOpen = false

    renderer = afx`
        <dl class="mt-6 space-y-6 divide-y divide-gray-200" id={props.id}>
            <div x-data={props.alwaysOpen ? '{expanded:true}' : '{expanded:false}'} class="pt-6">
                <dt class="text-lg">
                    <!-- Expand/collapse question button -->
                    <button x-on:click={props.alwaysOpen ? null : 'expanded=!expanded'} type="button"
                            class="text-left w-full flex justify-between items-start text-gray-400"
                            aria-controls={props.id + '-content'} :aria-expanded="expanded">
                        <span class="font-medium text-gray-900"> {props.title} </span>
                        <span class="ml-6 h-7 flex items-center">
                            <svg class=" h-6 w-6 transform" xmlns="http://www.w3.org/2000/svg" fill="none"
                                 viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"
                                 x-bind:class="{'-rotate-180': expanded}" x-transition>
                                <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"/>
                             </svg>
                        </span>
                    </button>
                </dt>
                <dd
                    x-show="expanded"
                    :hidden="!expanded"
                    "x-transition:enter.duration.500ms"
                    "x-transition:leave.duration.400ms"
                    class="my-10 pr-12"
                    id={props.id + '-content'}>
                    {props.content}
                </dd>
            </div>
        </dl>
    `
}
