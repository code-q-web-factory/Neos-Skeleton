##
# This renders a picture tag, with webp support
##
prototype(CodeQ.Site:Presentation.Atom.Image.LazyPicture) < prototype(Sitegeist.Lazybones:Picture) {
    @propTypes {
        imageSource = ${PropTypes.instanceOf('\\Sitegeist\\Kaleidoscope\\EelHelpers\\ImageSourceHelperInterface')}
        useBackgroundPreviewImage = ${PropTypes.boolean}
        maxWidth = ${PropTypes.integer}
        objectFit = ${PropTypes.oneOf(['none', 'contain', 'cover'])}
    }

    # api
    imageSource = false
    useBackgroundPreviewImage = false
    maxWidth = 1920
    objectFit = 'none'

    # api inherited from lazybones
    class = null
    lazy = true
    alt = ''

    # rendering
    class.@process.makeInlineBlock = ${String.trim('inline-block w-full ' + value)}
    lazyWidth = 200
    imageSource.@process.applyMaxWidth = ${value ? value.setWidth(this.maxWidth, true) : value}
    @context.imageSource = ${this.imageSource}
    sources = Neos.Fusion:RawArray {
        webp = Neos.Fusion:RawArray {
            imageSource = ${imageSource.setFormat('webp')}
            type = 'image/webp'
        }
    }

    # srcset and sizes are implemented in lazy bones

    # background iamge rendering
    @context.useBackgroundPreviewImage = ${this.useBackgroundPreviewImage}
    prototype(Sitegeist.Kaleidoscope:Picture) {
        @process.addBackground = Neos.Fusion:Augmenter {
            @if.enabled = ${useBackgroundPreviewImage}
            style = ${'background-position: center; background-size: cover; background-image: url(\'' + imageSource.setWidth(40, true).src() + '\');'}
        }
    }

    @context.objectFit = ${this.objectFit}
    prototype(Sitegeist.Kaleidoscope:Image) {
        attributes.class = Neos.Fusion:Match {
            @subject = ${objectFit}
            'none' = 'w-full'
            'contain' = 'w-full h-full object-contain'
            'cover' = 'w-full h-full object-cover'
        }
    }
    prototype(Sitegeist.Lazybones:Image) {
        class = Neos.Fusion:Match {
            @subject = ${objectFit}
            'none' = 'w-full'
            'contain' = 'w-full h-full object-contain'
            'cover' = 'w-full h-full object-cover'
        }
    }
}
