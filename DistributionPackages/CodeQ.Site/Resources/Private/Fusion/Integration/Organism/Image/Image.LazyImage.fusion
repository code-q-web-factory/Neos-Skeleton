prototype(CodeQ.Site:Component.Image.LazyImage) < prototype(Sitegeist.Lazybones:Image) {
	# api
	# imageSource is expected to be an image
	imageSource = false
	backgroundPreviewImage = false
	# this is used for our IE polyfill, see https://github.com/constancecchen/object-fit-polyfill#readme
	dataObjectFit = false

	# api inherited from lazybones
    class = null
	lazy = true
	alt = ''

	# rendering
	lazyWidth = 100
	imageSource.@process.convert = CodeQ.Site:Component.Image.AssetToSource
	# srcset and sizes are implemented in sub components

	renderer.lazy.renderer.attributes.data-object-fit = ${props.dataObjectFit}
	renderer.default.renderer.renderer.attributes.data-object-fit = ${props.dataObjectFit}

	@context.backgroundPreviewImage = ${this.backgroundPreviewImage}
	backgroundPreviewImageStyle = CodeQ.Site:Component.Image.BackgroundPreviewImage {
		asset = ${backgroundPreviewImage}
		@process.toStyle = ${'background-position: center; background-size: cover; background-image: url(\'' + value + '\');'}
	}
	renderer.lazy.renderer.attributes.style.@process.addBackgroundImage = ${value + props.backgroundPreviewImageStyle}
	renderer.default.renderer.renderer.attributes.style.@process.addBackgroundImage = ${value + props.backgroundPreviewImageStyle}
}
